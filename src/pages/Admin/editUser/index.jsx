import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Form, Input, Button, Select, message, Card } from "antd";
import { userService } from "../../../service/userService";

const { Option } = Select;

const EditUser = () => {
  const [form] = Form.useForm();
  const [user, setUser] = useState(null);
  const { taiKhoan } = useParams();
  const navigate = useNavigate();

  useEffect(() => {
    const fetchUser = async () => {
      try {
        const res = await userService.getUserById(taiKhoan);
        const userData = res.data.content;

        console.log("üîπ D·ªØ li·ªáu user t·ª´ API:", userData);

        setUser(userData);

        // ‚ö° Ch·ªâ g·ªçi setFieldsValue sau khi form ƒë√£ mount
        setTimeout(() => {
          form.setFieldsValue({
            matKhau: userData.matKhau,
            hoTen: userData.hoTen,
            email: userData.email,
            soDT: userData.soDT || "",
            maLoaiNguoiDung: userData.maLoaiNguoiDung,
          });
        }, 0);
      } catch (err) {
        console.error("‚ùå Fetch user failed:", err);
        message.error("Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng!");
      }
    };

    fetchUser();
  }, [taiKhoan, form]);

  const onFinish = async (values) => {
    console.log("‚úÖ Gi√° tr·ªã form submit:", values);

    try {
      const payload = {
        taiKhoan: user.taiKhoan,
        maNhom: user.maNhom || "GP01",
        hoTen: values.hoTen,
        email: values.email,
        soDT: values.soDT,
        maLoaiNguoiDung: values.maLoaiNguoiDung,
        matKhau: values.matKhau || user.matKhau,
      };

      console.log("üöÄ Payload g·ª≠i l√™n BE:", payload);

      const res = await userService.updateInfoUser(payload);

      console.log("‚úÖ K·∫øt qu·∫£ update:", res.data);
      message.success("C·∫≠p nh·∫≠t ng∆∞·ªùi d√πng th√†nh c√¥ng!");
      navigate("/admin");
    } catch (err) {
      console.error("‚ùå Update error:", err);
      message.error(err.response?.data?.content || "C·∫≠p nh·∫≠t th·∫•t b·∫°i");
    }
  };

  if (!user) return <div>ƒêang t·∫£i...</div>;

  return (
    <Card
      title="Ch·ªânh s·ª≠a ng∆∞·ªùi d√πng"
      className="max-w-2xl mx-auto mt-6 shadow"
    >
      <Form layout="vertical" form={form} onFinish={onFinish}>
        <Form.Item label="T√†i kho·∫£n">
          <Input
            value={user.taiKhoan}
            readOnly
            style={{ backgroundColor: "#fafafa", color: "#555", opacity: 0.7 }}
          />
        </Form.Item>

        <Form.Item
          label="M·∫≠t kh·∫©u"
          name="matKhau"
          rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u" }]}
        >
          <Input.Password />
        </Form.Item>

        <Form.Item
          label="H·ªç t√™n"
          name="hoTen"
          rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p h·ªç t√™n" }]}
        >
          <Input />
        </Form.Item>

        <Form.Item
          label="Email"
          name="email"
          rules={[
            { required: true, message: "Vui l√≤ng nh·∫≠p email" },
            { type: "email", message: "Email kh√¥ng h·ª£p l·ªá" },
          ]}
        >
          <Input />
        </Form.Item>

        {/* ‚ö° s·ª≠a l·∫°i ƒë√∫ng key "soDT" */}
        <Form.Item
          label="S·ªë ƒëi·ªán tho·∫°i"
          name="soDT"
          rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i" }]}
        >
          <Input />
        </Form.Item>

        <Form.Item label="M√£ nh√≥m">
          <Input
            value={user.maNhom}
            readOnly
            style={{ backgroundColor: "#fafafa", color: "#555", opacity: 0.7 }}
          />
        </Form.Item>

        <Form.Item
          label="Lo·∫°i ng∆∞·ªùi d√πng"
          name="maLoaiNguoiDung"
          rules={[{ required: true, message: "Vui l√≤ng ch·ªçn lo·∫°i ng∆∞·ªùi d√πng" }]}
        >
          <Select placeholder="Ch·ªçn lo·∫°i ng∆∞·ªùi d√πng">
            <Option value="KhachHang">Kh√°ch h√†ng</Option>
            <Option value="QuanTri">Qu·∫£n tr·ªã</Option>
          </Select>
        </Form.Item>

        <Form.Item>
          <Button type="primary" htmlType="submit">
            C·∫≠p nh·∫≠t ng∆∞·ªùi d√πng
          </Button>
        </Form.Item>
      </Form>
    </Card>
  );
};

export default EditUser;
